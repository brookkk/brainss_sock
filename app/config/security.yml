# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Brains\UserBundle\Entity\User: sha512

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_AUTEUR, ROLE_MODERATEUR]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        
        main:
            id: fos_user.user_provider.username
                        
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_AUTEUR' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
                    brook: { password: brook, roles: [ 'ROLE_ADMIN' ] }
                    gary:
                        password: pass
                        roles: 'ROLE_USER'


    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
                username_parameter: username
                password_parameter: password

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator


        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            anonymous: true
            provider: main
            form_login:
                login_path: login
                check_path: login_check
            logout:
                path: logout
                target: /login
            remember_me:
                secret: %secret%
            


    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }

    
        # activate different ways to authenticate

        # http://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
        #http_basic: ~

        # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
        #form_login: ~

        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }        
